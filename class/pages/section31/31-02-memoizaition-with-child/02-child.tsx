import { memo } from "react";

function MemoizationWithChildPage(): JSX.Element {
  console.log("자식이 렌더링 됩니다.");

  return (
    <>
      <div>==========================================================</div>
      <h1>저는 자식 컴포넌트 입니다!!!</h1>
      <div>==========================================================</div>
    </>
  );
}

export default memo(MemoizationWithChildPage);

// memo 컴포넌트
// 부모요소가 리렌더링 될때 자식 요소에 변경 내용이 없으면
// 자식도 다시 렌디링되는것을 방지합니다.

// 변경되는 props로 전달받은게 있다면, child에서 사용되지 않아도 변경되는 것은 리렌더 됩니다.

// 모든 컴포넌트에 memo를 저장해놓는건 좋은 방법은 아닙니다.
// 기억 ( 저장 ) 과정을 거치므로 오히려 낭비일 수 있습니다.

// 자식요소가 많거나, 쓸데없는 렌더링이 필요하지 않을경우 memo 사용시 체감 할 수 있습니다.

// 작은 프로젝트에서는 체감할 수 없으나, 일반적으로 회사에서 진행하는 프로젝트는 memo를 많이 사용 할 수 있으니
// 어디에 추가해야하는지 파악하고 적용하는 연습이 필요합니다
